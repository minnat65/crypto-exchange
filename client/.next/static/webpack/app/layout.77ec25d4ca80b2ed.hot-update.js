"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./lib/features/crypto/cryptoSlice.ts":
/*!********************************************!*\
  !*** ./lib/features/crypto/cryptoSlice.ts ***!
  \********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cryptoSlice: function() { return /* binding */ cryptoSlice; },\n/* harmony export */   setCoin: function() { return /* binding */ setCoin; },\n/* harmony export */   setCryptoData: function() { return /* binding */ setCryptoData; }\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit */ \"(app-pages-browser)/./node_modules/@reduxjs/toolkit/dist/redux-toolkit.modern.mjs\");\n\nconst cryptoSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createSlice)({\n    name: \"coins-data\",\n    initialState: {\n        coin: \"ETH\",\n        cryptoData: []\n    },\n    reducers: {\n        setCoin: (state, payload)=>{\n            state.coin = payload.payload;\n            return state;\n        },\n        setCryptoData: (state, payload)=>{\n            console.log(payload);\n            state.cryptoData = payload.payload;\n            return state;\n        }\n    }\n});\n// Action creators are generated for each case reducer function\nconst { setCoin, setCryptoData } = cryptoSlice.actions;\n/* harmony default export */ __webpack_exports__[\"default\"] = (cryptoSlice.reducer);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9mZWF0dXJlcy9jcnlwdG8vY3J5cHRvU2xpY2UudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUE4QztBQUV2QyxNQUFNQyxjQUFjRCw2REFBV0EsQ0FBQztJQUNyQ0UsTUFBTTtJQUNOQyxjQUFjO1FBQ1pDLE1BQU07UUFDTkMsWUFBWSxFQUFFO0lBQ2hCO0lBQ0FDLFVBQVU7UUFDUkMsU0FBUyxDQUFDQyxPQUFPQztZQUNiRCxNQUFNSixJQUFJLEdBQUdLLFFBQVFBLE9BQU87WUFDNUIsT0FBT0Q7UUFDWDtRQUVBRSxlQUFlLENBQUNGLE9BQU9DO1lBQ3JCRSxRQUFRQyxHQUFHLENBQUNIO1lBQ1ZELE1BQU1ILFVBQVUsR0FBR0ksUUFBUUEsT0FBTztZQUNsQyxPQUFPRDtRQUNYO0lBQ0Y7QUFDRixHQUFFO0FBRUYsK0RBQStEO0FBQ3hELE1BQU0sRUFBRUQsT0FBTyxFQUFFRyxhQUFhLEVBQUUsR0FBR1QsWUFBWVksT0FBTztBQUU3RCwrREFBZVosWUFBWWEsT0FBTyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9saWIvZmVhdHVyZXMvY3J5cHRvL2NyeXB0b1NsaWNlLnRzPzk4NTUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlU2xpY2UgfSBmcm9tICdAcmVkdXhqcy90b29sa2l0J1xuXG5leHBvcnQgY29uc3QgY3J5cHRvU2xpY2UgPSBjcmVhdGVTbGljZSh7XG4gIG5hbWU6ICdjb2lucy1kYXRhJyxcbiAgaW5pdGlhbFN0YXRlOiB7XG4gICAgY29pbjogJ0VUSCcsXG4gICAgY3J5cHRvRGF0YTogW10sXG4gIH0sXG4gIHJlZHVjZXJzOiB7XG4gICAgc2V0Q29pbjogKHN0YXRlLCBwYXlsb2FkKSA9PiB7XG4gICAgICAgIHN0YXRlLmNvaW4gPSBwYXlsb2FkLnBheWxvYWQ7XG4gICAgICAgIHJldHVybiBzdGF0ZTtcbiAgICB9LFxuXG4gICAgc2V0Q3J5cHRvRGF0YTogKHN0YXRlLCBwYXlsb2FkKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhwYXlsb2FkKTtcbiAgICAgICAgc3RhdGUuY3J5cHRvRGF0YSA9IHBheWxvYWQucGF5bG9hZDtcbiAgICAgICAgcmV0dXJuIHN0YXRlO1xuICAgIH0sXG4gIH1cbn0pXG5cbi8vIEFjdGlvbiBjcmVhdG9ycyBhcmUgZ2VuZXJhdGVkIGZvciBlYWNoIGNhc2UgcmVkdWNlciBmdW5jdGlvblxuZXhwb3J0IGNvbnN0IHsgc2V0Q29pbiwgc2V0Q3J5cHRvRGF0YSB9ID0gY3J5cHRvU2xpY2UuYWN0aW9uc1xuXG5leHBvcnQgZGVmYXVsdCBjcnlwdG9TbGljZS5yZWR1Y2VyIl0sIm5hbWVzIjpbImNyZWF0ZVNsaWNlIiwiY3J5cHRvU2xpY2UiLCJuYW1lIiwiaW5pdGlhbFN0YXRlIiwiY29pbiIsImNyeXB0b0RhdGEiLCJyZWR1Y2VycyIsInNldENvaW4iLCJzdGF0ZSIsInBheWxvYWQiLCJzZXRDcnlwdG9EYXRhIiwiY29uc29sZSIsImxvZyIsImFjdGlvbnMiLCJyZWR1Y2VyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/features/crypto/cryptoSlice.ts\n"));

/***/ })

});